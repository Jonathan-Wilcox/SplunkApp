<form>
  <label>Delphix  Dashboard</label>
  <fieldset submitButton="false" autoRun="true">
    <input type="time" token="time" searchWhenChanged="true">
      <label>Time Range</label>
      <default>
        <earliest>-24h@h</earliest>
        <latest>now</latest>
      </default>
    </input>
    <input type="dropdown" token="host" searchWhenChanged="true">
      <label>Host</label>
      <fieldForLabel>host</fieldForLabel>
      <fieldForValue>host</fieldForValue>
      <search>
        <query>| mcatalog values(host) as host |  mvexpand host | sort "host" | table "host" </query>
        <earliest>0</earliest>
        <latest></latest>
      </search>
      <choice value="*">All</choice>
      <default>*</default>
    </input>
  </fieldset>
  <row>
    <panel>
      <viz type="horseshoe_meter_app.horseshoe_meter">
        <title>Storage</title>
        <search>
          <query>| mstats avg(_value) as current where host="$host$"  metric_name="system.capacity.consumer.size" by host, data.totalSpace, data.consumerName 
| eval usageGB = round(current / 1024 / 1024 /1024 , 2) 
| eval capacityGB = round('data.totalSpace' / 1024 / 1024 /1024 , 2) 
| eval dataset = 'data.consumerName' 
| stats first(usageGB) as TotalU, first(capacityGB) as TotalCap by dataset, host
| stats sum(TotalU) as Gtotal, first(TotalCap) as GCap by host
| eval pct_usage = round(Gtotal / GCap * 100, 2)
| eval compare_usage = Gtotal." / ".GCap 
| stats first(pct_usage) as "Used(%)" first(compare_usage) as "Compare(used/total)" by host</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="drilldown">all</option>
        <option name="height">226</option>
        <option name="horseshoe_meter_app.horseshoe_meter.backgroundColor">#006d9c</option>
        <option name="horseshoe_meter_app.horseshoe_meter.dialColor">#FFF</option>
        <option name="horseshoe_meter_app.horseshoe_meter.maxRangeColor">#b44441</option>
        <option name="horseshoe_meter_app.horseshoe_meter.maxRangeThreshold">80</option>
        <option name="horseshoe_meter_app.horseshoe_meter.maxValue">100</option>
        <option name="horseshoe_meter_app.horseshoe_meter.midRangeColor">#fbcd2f</option>
        <option name="horseshoe_meter_app.horseshoe_meter.midRangeThreshold">65</option>
        <option name="horseshoe_meter_app.horseshoe_meter.minRangeColor">#3fc77a</option>
        <option name="horseshoe_meter_app.horseshoe_meter.minValue">0</option>
        <option name="horseshoe_meter_app.horseshoe_meter.thresholdStyle">percentage</option>
        <option name="horseshoe_meter_app.horseshoe_meter.useRangemap">true</option>
        <option name="horseshoe_meter_app.horseshoe_meter.valueColor">#6db7c6</option>
        <option name="refresh.display">progressbar</option>
        <option name="trellis.enabled">1</option>
        <option name="trellis.scales.shared">1</option>
        <option name="trellis.size">medium</option>
        <drilldown>
          <link target="_self">/app/delphix/metrix?host=$click.host$</link>
        </drilldown>
      </viz>
    </panel>
  </row>
  <row>
    <panel>
      <chart>
        <title>Jobs Status</title>
        <search>
          <query>index="delphix_events" |search host="$host$"  source="delphix.events.job.event" | spath jobState | search jobState=* | stats count(eval(jobState="COMPLETED")) AS COMPLETED  count(eval(jobState="FAILED")) AS FAILED count(eval(jobState="CANCELED")) AS CANCELED  by host</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
        </search>
        <option name="charting.chart">column</option>
        <option name="charting.drilldown">all</option>
        <option name="refresh.display">progressbar</option>
        <drilldown>
          <link target="_self">/app/delphix/details?host=$click.host$</link>
        </drilldown>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>Alerts</title>
        <search>
          <query>index="delphix_events" | search host="$host$" source="delphix.events.alert" | spath eventSeverity| search eventSeverity=WARNING OR CRITICAL | stats count(eval(eventSeverity="CRITICAL")) AS CRITICAL count(eval(eventSeverity="WARNING")) AS WARNING BY host </query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
        </search>
        <option name="charting.chart">column</option>
        <option name="charting.drilldown">all</option>
        <option name="refresh.display">progressbar</option>
        <drilldown>
          <link target="_self">/app/delphix/alerts</link>
        </drilldown>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>Faults</title>
        <search>
          <query>index="delphix_events"  |search host="$host$" | stats  count(eval(source="delphix.events.fault.posted")) AS FAULTS  BY host</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
        </search>
        <option name="charting.chart">column</option>
        <option name="refresh.display">progressbar</option>
        <drilldown>
          <link target="_self">/app/delphix/faults</link>
        </drilldown>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <chart>
        <title>User Logins</title>
        <search>
          <query>index="delphix_events" |search host="$host$" source="delphix.events.action.*" title="USER_*" host="*"| spath title |spath workSourceName | stats count(eval(title="USER_LOGIN")) AS Successful count(eval(title="USER_FAILED_LOGIN")) AS Failed BY host</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
        </search>
        <option name="charting.axisTitleX.visibility">visible</option>
        <option name="charting.axisTitleY.visibility">visible</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.axisY.abbreviation">none</option>
        <option name="charting.chart">column</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">all</option>
        <option name="charting.layout.splitSeries">0</option>
        <option name="charting.legend.placement">right</option>
        <option name="refresh.display">progressbar</option>
        <option name="trellis.enabled">0</option>
        <drilldown>
          <link target="_self">/app/delphix/security</link>
        </drilldown>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>Delphix  Events</title>
        <search>
          <query>index="delphix_events"  | search host="$host$" |stats 
count(eval(source="delphix.events.action.completed" OR 
source="delphix.events.action.started" OR 
source="delphix.events.action.waiting" )) AS ACTIONS 
count(eval(source="delphix.events.fault.posted")) AS FAULTS 
count(eval(source="delphix.events.alert" )) AS ALERTS count(eval(source="delphix.events.job.event" )) AS JOBS BY host</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
        <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
        <option name="charting.axisTitleX.visibility">visible</option>
        <option name="charting.axisTitleY.visibility">visible</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.axisX.abbreviation">none</option>
        <option name="charting.axisX.scale">linear</option>
        <option name="charting.axisY.abbreviation">none</option>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.axisY2.abbreviation">none</option>
        <option name="charting.axisY2.enabled">0</option>
        <option name="charting.axisY2.scale">inherit</option>
        <option name="charting.chart">column</option>
        <option name="charting.chart.bubbleMaximumSize">50</option>
        <option name="charting.chart.bubbleMinimumSize">10</option>
        <option name="charting.chart.bubbleSizeBy">area</option>
        <option name="charting.chart.nullValueMode">gaps</option>
        <option name="charting.chart.showDataLabels">none</option>
        <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.chart.style">shiny</option>
        <option name="charting.drilldown">all</option>
        <option name="charting.layout.splitSeries">0</option>
        <option name="charting.layout.splitSeries.allowIndependentYRanges">0</option>
        <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
        <option name="charting.legend.mode">standard</option>
        <option name="charting.legend.placement">right</option>
        <option name="charting.lineWidth">2</option>
        <option name="refresh.display">progressbar</option>
        <option name="trellis.enabled">0</option>
        <option name="trellis.scales.shared">1</option>
        <option name="trellis.size">medium</option>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>Jobs  Duration</title>
        <search>
          <query>index="delphix_events" | search host ="$host$" source="delphix.events.action.*" | transaction reference | table reference title duration | sort duration desc</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
        </search>
        <option name="charting.chart">column</option>
        <drilldown>
          <link target="_self">/app/delphix/jobs</link>
        </drilldown>
      </chart>
    </panel>
  </row>
</form>